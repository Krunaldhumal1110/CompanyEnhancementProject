{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\catalisProject\\\\frontend\\\\src\\\\MachineGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Grid, Card, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Snackbar } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BLOCKS_X = 5;\nconst BLOCKS_Y = 3;\nconst BLOCKS = BLOCKS_X * BLOCKS_Y;\n\n// API calls\nconst addMachineApi = async formData => {\n  const {\n    data\n  } = await axios.post('/api/machines', formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n  return data;\n};\nconst fetchMachines = async () => {\n  const {\n    data\n  } = await axios.get('/api/machines');\n  return data;\n};\nconst completeMachineApi = async id => {\n  const {\n    data\n  } = await axios.post(`/api/machines/${id}/complete`);\n  return data;\n};\nconst deleteMachineApi = async id => {\n  await axios.delete(`/api/machines/${id}`);\n};\nfunction MachineGrid() {\n  _s();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const [pdfFile, setPdfFile] = useState(null);\n  const fileInputRef = useRef();\n\n  // âœ… React Query: fetch machines directly\n  const {\n    data: machines = []\n  } = useQuery({\n    queryKey: ['machines'],\n    queryFn: fetchMachines,\n    staleTime: 5 * 60 * 1000,\n    // keep cached for 5 minutes\n    select: data => Array.isArray(data) ? data.sort((a, b) => (a.blockNo || 0) - (b.blockNo || 0)) : [],\n    refetchOnWindowFocus: false\n  });\n\n  // Mutations\n  const addMachineMutation = useMutation({\n    mutationFn: addMachineApi,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['machines']\n      });\n    }\n  });\n  const completeMachineMutation = useMutation({\n    mutationFn: completeMachineApi,\n    onSuccess: () => queryClient.invalidateQueries({\n      queryKey: ['machines']\n    })\n  });\n  const deleteMachineMutation = useMutation({\n    mutationFn: deleteMachineApi,\n    onSuccess: () => queryClient.invalidateQueries({\n      queryKey: ['machines']\n    })\n  });\n\n  // UI state\n  const [open, setOpen] = useState(false);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const MACHINE_MODELS = ['CPT425-SERRA', 'CPT525-SERRA', 'CPT625-SERRA', 'CPT650-SERRA', 'CPT825-SERRA'];\n  const [form, setForm] = useState({\n    model: '',\n    productNo: ''\n  });\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    action: null\n  });\n\n  // Only show non-completed machines in workshop area\n  const workshopMachines = machines.filter(m => !m.completed);\n  // Always 5x3 blocks, fill with non-completed machines or empty\n  const blocks = Array.from({\n    length: BLOCKS\n  }, (_, i) => {\n    const machine = workshopMachines.find(m => m.blockNo === i + 1);\n    return machine ? {\n      ...machine,\n      block: i + 1\n    } : {\n      block: i + 1\n    };\n  });\n\n  // Handlers\n  const handleAddClick = blockIdx => {\n    // Only consider non-completed machines as occupying blocks\n    const blockMachine = workshopMachines.find(m => m.blockNo === blockIdx + 1);\n    if (blockMachine) {\n      setSnackbar({\n        open: true,\n        message: 'This block already has a machine. Please select an empty block.',\n        action: null\n      });\n      return;\n    }\n    setSelectedBlock(blockIdx);\n    setForm({\n      model: '',\n      productNo: ''\n    });\n    setOpen(true);\n    setPdfFile(null);\n  };\n  const handleAddMachine = async () => {\n    if (!form.model || !/^\\d{7}$/.test(form.productNo)) {\n      setSnackbar({\n        open: true,\n        message: 'Enter model and unique 7-digit machine no.',\n        action: null\n      });\n      return;\n    }\n    if (!pdfFile) {\n      setSnackbar({\n        open: true,\n        message: 'Please upload a master order PDF.',\n        action: null\n      });\n      return;\n    }\n    const exists = machines.some(m => m.productNo === form.productNo);\n    if (exists) {\n      setSnackbar({\n        open: true,\n        message: 'Machine no. must be unique!',\n        action: null\n      });\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', `M/C-${selectedBlock + 1}`);\n    formData.append('status', 'INCOMPLETE');\n    formData.append('completed', false);\n    formData.append('masterCardInfo', '');\n    formData.append('electricDrawingPath', '');\n    formData.append('machineNo', String(selectedBlock + 1));\n    formData.append('model', form.model);\n    formData.append('productNo', form.productNo);\n    formData.append('blockNo', selectedBlock + 1);\n    formData.append('pdf', pdfFile);\n    try {\n      await addMachineMutation.mutateAsync(formData);\n      setOpen(false);\n      setSelectedBlock(null);\n      setPdfFile(null);\n    } catch (err) {\n      var _err$response;\n      let msg = 'Upload failed';\n      if (err !== null && err !== void 0 && (_err$response = err.response) !== null && _err$response !== void 0 && _err$response.data) {\n        if (typeof err.response.data === 'string') {\n          msg = err.response.data;\n        } else if (typeof err.response.data === 'object' && err.response.data.message) {\n          msg = err.response.data.message;\n        }\n      }\n      setSnackbar({\n        open: true,\n        message: msg,\n        action: null\n      });\n    }\n  };\n  const markComplete = async machine => {\n    await completeMachineMutation.mutateAsync(machine.id);\n    setSnackbar({\n      open: true,\n      message: 'Would you like to remove this machine from shopfloor?',\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        size: \"small\",\n        onClick: () => removeMachine(machine.id),\n        children: \"Yes, Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    });\n  };\n  const removeMachine = async id => {\n    await deleteMachineMutation.mutateAsync(id);\n    setSnackbar({\n      open: true,\n      message: 'Machine removed from shopfloor and added to completed table.',\n      action: null\n    });\n  };\n\n  // UI\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"w-full py-6 bg-gradient-to-r from-blue-600 to-purple-600 shadow-lg mb-6 flex items-center justify-between px-8 animate-fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-white tracking-tight drop-shadow-lg\",\n        children: \"Workshop Machines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg text-white/80 font-medium\",\n        children: [blocks.filter(b => b.id).length, \" / \", BLOCKS, \" Occupied\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 gap-6 px-8 pb-8 animate-fade-in\",\n      children: blocks.map((m, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-xl shadow-xl bg-white hover:scale-105 transition-transform duration-300 ease-in-out border-2 border-gray-100 flex flex-col items-center justify-center min-h-[160px]\",\n        children: m.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full flex flex-col items-center py-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg font-bold text-blue-700 mb-1\",\n              children: [\"Machine #\", m.block]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Model: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold text-gray-700\",\n                children: m.model\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Product No.: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold text-gray-700\",\n                children: m.productNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-4/5 py-2 mb-2 rounded-lg bg-gradient-to-r from-blue-500 to-purple-500 text-white font-semibold shadow hover:from-blue-600 hover:to-purple-700 transition-colors duration-200\",\n            onClick: () => navigate(`/machine/${m.id}`),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), !m.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-4/5 py-2 rounded-lg border border-yellow-400 text-yellow-700 font-semibold bg-yellow-50 hover:bg-yellow-100 transition-colors duration-200\",\n            onClick: () => markComplete(m),\n            children: \"Mark as Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-4/5 py-2 rounded-lg border border-blue-400 text-blue-700 font-semibold bg-blue-50 hover:bg-blue-100 transition-colors duration-200 mt-4\",\n          onClick: () => handleAddClick(idx),\n          children: \"Add Machine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Machine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"\",\n          value: form.model,\n          onChange: e => setForm({\n            ...form,\n            model: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          SelectProps: {\n            native: true\n          },\n          autoFocus: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), MACHINE_MODELS.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model,\n            children: model\n          }, model, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Machine No. (7 digits)\",\n          value: form.productNo,\n          onChange: e => setForm({\n            ...form,\n            productNo: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          inputProps: {\n            maxLength: 7\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          type: \"file\",\n          accept: \"application/pdf\",\n          style: {\n            display: 'block',\n            marginTop: 16\n          },\n          onChange: e => setPdfFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddMachine,\n          variant: \"contained\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      message: snackbar.message,\n      action: snackbar.action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MachineGrid, \"tU42VfJooKYiN26zM4hX6d9QE/s=\", false, function () {\n  return [useNavigate, useQueryClient, useQuery, useMutation, useMutation, useMutation];\n});\n_c = MachineGrid;\nexport default MachineGrid;\nvar _c;\n$RefreshReg$(_c, \"MachineGrid\");","map":{"version":3,"names":["React","useState","useRef","Grid","Card","CardContent","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Snackbar","useNavigate","useQuery","useMutation","useQueryClient","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","BLOCKS_X","BLOCKS_Y","BLOCKS","addMachineApi","formData","data","post","headers","fetchMachines","get","completeMachineApi","id","deleteMachineApi","delete","MachineGrid","_s","navigate","queryClient","pdfFile","setPdfFile","fileInputRef","machines","queryKey","queryFn","staleTime","select","Array","isArray","sort","a","b","blockNo","refetchOnWindowFocus","addMachineMutation","mutationFn","onSuccess","invalidateQueries","completeMachineMutation","deleteMachineMutation","open","setOpen","selectedBlock","setSelectedBlock","MACHINE_MODELS","form","setForm","model","productNo","snackbar","setSnackbar","message","action","workshopMachines","filter","m","completed","blocks","from","length","_","i","machine","find","block","handleAddClick","blockIdx","blockMachine","handleAddMachine","test","exists","some","FormData","append","String","mutateAsync","err","_err$response","msg","response","markComplete","color","size","onClick","removeMachine","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","idx","onClose","label","value","onChange","e","target","fullWidth","margin","SelectProps","native","autoFocus","inputProps","maxLength","ref","type","accept","style","display","marginTop","files","variant","autoHideDuration","_c","$RefreshReg$"],"sources":["D:/Krunal/catalisProject/frontend/src/MachineGrid.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Snackbar } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport axios from 'axios';\r\n\r\nconst BLOCKS_X = 5;\r\nconst BLOCKS_Y = 3;\r\nconst BLOCKS = BLOCKS_X * BLOCKS_Y;\r\n\r\n// API calls\r\nconst addMachineApi = async (formData) => {\r\n  const { data } = await axios.post('/api/machines', formData, {\r\n   headers: {\r\n      \"Content-Type\": \"multipart/form-data\"}});\r\n  return data;\r\n};\r\n\r\nconst fetchMachines = async () => {\r\n  const { data } = await axios.get('/api/machines');\r\n  return data;\r\n};\r\n\r\nconst completeMachineApi = async (id) => {\r\n  const { data } = await axios.post(`/api/machines/${id}/complete`);\r\n  return data;\r\n};\r\n\r\nconst deleteMachineApi = async (id) => {\r\n  await axios.delete(`/api/machines/${id}`);\r\n};\r\n\r\nfunction MachineGrid() {\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const fileInputRef = useRef();\r\n\r\n  // âœ… React Query: fetch machines directly\r\n  const { data: machines = [] } = useQuery({\r\n    queryKey: ['machines'],\r\n    queryFn: fetchMachines,\r\n    staleTime: 5 * 60 * 1000, // keep cached for 5 minutes\r\n    select: (data) =>\r\n      Array.isArray(data)\r\n        ? data.sort((a, b) => (a.blockNo || 0) - (b.blockNo || 0))\r\n        : [],\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  // Mutations\r\n  const addMachineMutation = useMutation({\r\n    mutationFn: addMachineApi,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['machines'] });\r\n    },\r\n  });\r\n\r\n  const completeMachineMutation = useMutation({\r\n    mutationFn: completeMachineApi,\r\n    onSuccess: () => queryClient.invalidateQueries({ queryKey: ['machines'] }),\r\n  });\r\n\r\n  const deleteMachineMutation = useMutation({\r\n    mutationFn: deleteMachineApi,\r\n    onSuccess: () => queryClient.invalidateQueries({ queryKey: ['machines'] }),\r\n  });\r\n\r\n  // UI state\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const MACHINE_MODELS = [\r\n    'CPT425-SERRA',\r\n    'CPT525-SERRA',\r\n    'CPT625-SERRA',\r\n    'CPT650-SERRA',\r\n    'CPT825-SERRA',\r\n  ];\r\n  const [form, setForm] = useState({ model: '', productNo: '' });\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', action: null });\r\n\r\n  // Only show non-completed machines in workshop area\r\n  const workshopMachines = machines.filter((m) => !m.completed);\r\n  // Always 5x3 blocks, fill with non-completed machines or empty\r\n  const blocks = Array.from({ length: BLOCKS }, (_, i) => {\r\n    const machine = workshopMachines.find((m) => m.blockNo === i + 1);\r\n    return machine ? { ...machine, block: i + 1 } : { block: i + 1 };\r\n  });\r\n\r\n  // Handlers\r\n  const handleAddClick = (blockIdx) => {\r\n    // Only consider non-completed machines as occupying blocks\r\n    const blockMachine = workshopMachines.find((m) => m.blockNo === blockIdx + 1);\r\n    if (blockMachine) {\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'This block already has a machine. Please select an empty block.',\r\n        action: null,\r\n      });\r\n      return;\r\n    }\r\n    setSelectedBlock(blockIdx);\r\n    setForm({ model: '', productNo: '' });\r\n    setOpen(true);\r\n    setPdfFile(null);\r\n  };\r\n\r\n  const handleAddMachine = async () => {\r\n    if (!form.model || !/^\\d{7}$/.test(form.productNo)) {\r\n      setSnackbar({ open: true, message: 'Enter model and unique 7-digit machine no.', action: null });\r\n      return;\r\n    }\r\n    if (!pdfFile) {\r\n      setSnackbar({ open: true, message: 'Please upload a master order PDF.', action: null });\r\n      return;\r\n    }\r\n    const exists = machines.some((m) => m.productNo === form.productNo);\r\n    if (exists) {\r\n      setSnackbar({ open: true, message: 'Machine no. must be unique!', action: null });\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', `M/C-${selectedBlock + 1}`);\r\n    formData.append('status', 'INCOMPLETE');\r\n    formData.append('completed', false);\r\n    formData.append('masterCardInfo', '');\r\n    formData.append('electricDrawingPath', '');\r\n    formData.append('machineNo', String(selectedBlock + 1));\r\n    formData.append('model', form.model);\r\n    formData.append('productNo', form.productNo);\r\n    formData.append('blockNo', selectedBlock + 1);\r\n    formData.append('pdf', pdfFile);\r\n\r\n    try {\r\n      await addMachineMutation.mutateAsync(formData);\r\n      setOpen(false);\r\n      setSelectedBlock(null);\r\n      setPdfFile(null);\r\n    } catch (err) {\r\n      let msg = 'Upload failed';\r\n      if (err?.response?.data) {\r\n        if (typeof err.response.data === 'string') {\r\n          msg = err.response.data;\r\n        } else if (typeof err.response.data === 'object' && err.response.data.message) {\r\n          msg = err.response.data.message;\r\n        }\r\n      }\r\n      setSnackbar({\r\n        open: true,\r\n        message: msg,\r\n        action: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const markComplete = async (machine) => {\r\n    await completeMachineMutation.mutateAsync(machine.id);\r\n    setSnackbar({\r\n      open: true,\r\n      message: 'Would you like to remove this machine from shopfloor?',\r\n      action: (\r\n        <Button color=\"inherit\" size=\"small\" onClick={() => removeMachine(machine.id)}>\r\n          Yes, Remove\r\n        </Button>\r\n      ),\r\n    });\r\n  };\r\n\r\n  const removeMachine = async (id) => {\r\n    await deleteMachineMutation.mutateAsync(id);\r\n    setSnackbar({\r\n      open: true,\r\n      message: 'Machine removed from shopfloor and added to completed table.',\r\n      action: null,\r\n    });\r\n  };\r\n\r\n  // UI\r\n  return (\r\n    <>\r\n      {/* Modern Header */}\r\n      <header className=\"w-full py-6 bg-gradient-to-r from-blue-600 to-purple-600 shadow-lg mb-6 flex items-center justify-between px-8 animate-fade-in\">\r\n        <h1 className=\"text-4xl font-extrabold text-white tracking-tight drop-shadow-lg\">Workshop Machines</h1>\r\n        <span className=\"text-lg text-white/80 font-medium\">{blocks.filter(b => b.id).length} / {BLOCKS} Occupied</span>\r\n      </header>\r\n\r\n      {/* Responsive Grid with Tailwind */}\r\n      <div className=\"grid grid-cols-5 gap-6 px-8 pb-8 animate-fade-in\">\r\n        {blocks.map((m, idx) => (\r\n          <div key={idx} className=\"rounded-xl shadow-xl bg-white hover:scale-105 transition-transform duration-300 ease-in-out border-2 border-gray-100 flex flex-col items-center justify-center min-h-[160px]\">\r\n            {m.id ? (\r\n              <>\r\n                <div className=\"w-full flex flex-col items-center py-4\">\r\n                  <span className=\"text-lg font-bold text-blue-700 mb-1\">Machine #{m.block}</span>\r\n                  <span className=\"text-sm text-gray-500\">Model: <span className=\"font-semibold text-gray-700\">{m.model}</span></span>\r\n                  <span className=\"text-sm text-gray-500\">Product No.: <span className=\"font-semibold text-gray-700\">{m.productNo}</span></span>\r\n                </div>\r\n                <button\r\n                  className=\"w-4/5 py-2 mb-2 rounded-lg bg-gradient-to-r from-blue-500 to-purple-500 text-white font-semibold shadow hover:from-blue-600 hover:to-purple-700 transition-colors duration-200\"\r\n                  onClick={() => navigate(`/machine/${m.id}`)}\r\n                >\r\n                  View Details\r\n                </button>\r\n                {!m.completed && (\r\n                  <button\r\n                    className=\"w-4/5 py-2 rounded-lg border border-yellow-400 text-yellow-700 font-semibold bg-yellow-50 hover:bg-yellow-100 transition-colors duration-200\"\r\n                    onClick={() => markComplete(m)}\r\n                  >\r\n                    Mark as Complete\r\n                  </button>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <button\r\n                className=\"w-4/5 py-2 rounded-lg border border-blue-400 text-blue-700 font-semibold bg-blue-50 hover:bg-blue-100 transition-colors duration-200 mt-4\"\r\n                onClick={() => handleAddClick(idx)}\r\n              >\r\n                Add Machine\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Add Machine Dialog */}\r\n      <Dialog open={open} onClose={() => setOpen(false)}>\r\n        <DialogTitle>Add Machine</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            select\r\n            label=\"\"\r\n            value={form.model}\r\n            onChange={(e) => setForm({ ...form, model: e.target.value })}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            SelectProps={{ native: true }}\r\n            autoFocus\r\n          >\r\n            <option value=\"\">Select Model</option>\r\n            {MACHINE_MODELS.map((model) => (\r\n              <option key={model} value={model}>\r\n                {model}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Machine No. (7 digits)\"\r\n            value={form.productNo}\r\n            onChange={(e) => setForm({ ...form, productNo: e.target.value })}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            inputProps={{ maxLength: 7 }}\r\n          />\r\n          <input\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            accept=\"application/pdf\"\r\n            style={{ display: 'block', marginTop: 16 }}\r\n            onChange={(e) => setPdfFile(e.target.files[0])}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n          <Button onClick={handleAddMachine} variant=\"contained\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        message={snackbar.message}\r\n        action={snackbar.action}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MachineGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}