{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\catalisProject\\\\frontend\\\\src\\\\MachineGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Grid, Card, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Snackbar } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMachines, addMachine } from './machineSlice';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BLOCKS = 12;\nconst addMachineApi = async machine => {\n  const {\n    data\n  } = await axios.post('/api/machines', machine);\n  // Debug: confirm component mount\n  console.log('addMachineApi : ', data);\n  return data;\n};\nconst fetchMachines = async () => {\n  const {\n    data\n  } = await axios.get('/api/machines');\n  return data;\n};\nconst completeMachineApi = async id => {\n  const {\n    data\n  } = await axios.post(`/api/machines/${id}/complete`);\n  return data;\n};\nconst deleteMachineApi = async id => {\n  await axios.delete(`/api/machines/${id}`);\n};\nfunction MachineGrid() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const machines = useSelector(state => state.machines.list);\n  const queryClient = useQueryClient();\n\n  // React Query: fetch machines, cache for 5 minutes, show old data immediately\n  useQuery({\n    queryKey: ['machines'],\n    queryFn: fetchMachines,\n    staleTime: 5 * 60 * 1000,\n    // 5 minutes\n    onSuccess: data => {\n      dispatch(setMachines(data));\n    },\n    // Use select to always keep machines in correct block order\n    select: data => Array.isArray(data) ? data.sort((a, b) => (a.blockNo || 0) - (b.blockNo || 0)) : [],\n    refetchOnWindowFocus: false,\n    refetchOnMount: false\n  });\n\n  // Mutations\n  const addMachineMutation = useMutation({\n    mutationFn: addMachineApi,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['machines']\n      });\n    }\n  });\n  const completeMachineMutation = useMutation({\n    mutationFn: completeMachineApi,\n    onSuccess: () => queryClient.invalidateQueries({\n      queryKey: ['machines']\n    })\n  });\n  const deleteMachineMutation = useMutation({\n    mutationFn: deleteMachineApi,\n    onSuccess: () => queryClient.invalidateQueries({\n      queryKey: ['machines']\n    })\n  });\n\n  // UI state\n  const [open, setOpen] = useState(false);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [form, setForm] = useState({\n    model: '',\n    productNo: ''\n  });\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    action: null\n  });\n\n  // Always 12 blocks, fill with machines or empty\n  const blocks = Array.from({\n    length: BLOCKS\n  }, (_, i) => {\n    const machine = machines.find(m => m.blockNo === i + 1);\n    return machine ? {\n      ...machine,\n      block: i + 1\n    } : {\n      block: i + 1\n    };\n  });\n  const handleAddClick = blockIdx => {\n    // Prevent adding to an occupied block\n    const blockMachine = machines.find(m => m.blockNo === blockIdx + 1);\n    if (blockMachine) {\n      setSnackbar({\n        open: true,\n        message: 'This block already has a machine. Please select an empty block.',\n        action: null\n      });\n      return;\n    }\n    setSelectedBlock(blockIdx);\n    setForm({\n      model: '',\n      productNo: ''\n    });\n    setOpen(true);\n  };\n  const handleAddMachine = async () => {\n    // 7-digit validation\n    if (!form.model || !/^\\d{7}$/.test(form.productNo)) {\n      setSnackbar({\n        open: true,\n        message: 'Enter model and unique 7-digit machine no.',\n        action: null\n      });\n      return;\n    }\n    // Uniqueness validation\n    const exists = machines.some(m => m.productNo === form.productNo);\n    if (exists) {\n      setSnackbar({\n        open: true,\n        message: 'Machine no. must be unique!',\n        action: null\n      });\n      return;\n    }\n    await addMachineMutation.mutateAsync({\n      name: `M/C-${selectedBlock + 1}`,\n      status: 'INCOMPLETE',\n      completed: false,\n      masterCardInfo: '',\n      electricDrawingPath: '',\n      machineNo: String(selectedBlock + 1),\n      model: form.model,\n      productNo: form.productNo,\n      blockNo: selectedBlock + 1\n    });\n    setOpen(false);\n    setSelectedBlock(null);\n  };\n  const markComplete = async machine => {\n    await completeMachineMutation.mutateAsync(machine.id);\n    setSnackbar({\n      open: true,\n      message: 'Would you like to remove this machine from shopfloor?',\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        size: \"small\",\n        onClick: () => removeMachine(machine.id),\n        children: \"Yes, Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this)\n    });\n  };\n  const removeMachine = async id => {\n    await deleteMachineMutation.mutateAsync(id);\n    setSnackbar({\n      open: true,\n      message: 'Machine removed from shopfloor and added to completed table.',\n      action: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        mt: 2,\n        background: '#fff',\n        minHeight: '80vh',\n        p: 2\n      },\n      children: blocks.map((m, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 4,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            background: m.completed ? '#c8e6c9' : m.status === 'INCOMPLETE' ? '#ffcdd2' : '#fff',\n            minHeight: 120\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Machine No. \", m.block]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 9\n            }, this), m.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: [\"Model: \", m.model]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: [\"Product No.: \", m.productNo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => navigate(`/machine/${m.id}`),\n                sx: {\n                  mt: 1\n                },\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 11\n              }, this), !m.completed && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"warning\",\n                sx: {\n                  mt: 1\n                },\n                onClick: () => markComplete(m),\n                children: \"Mark as Complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              sx: {\n                mt: 2\n              },\n              onClick: () => handleAddClick(idx),\n              children: \"Add Machine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Machine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Model\",\n          value: form.model,\n          onChange: e => setForm({\n            ...form,\n            model: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Machine No. (7 digits)\",\n          value: form.productNo,\n          onChange: e => setForm({\n            ...form,\n            productNo: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          inputProps: {\n            maxLength: 7\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddMachine,\n          variant: \"contained\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      message: snackbar.message,\n      action: snackbar.action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(MachineGrid, \"gPqUoh+0rmle9jUvecxlaD3wCWI=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useQueryClient, useQuery, useMutation, useMutation, useMutation];\n});\n_c = MachineGrid;\nexport default MachineGrid;\nvar _c;\n$RefreshReg$(_c, \"MachineGrid\");","map":{"version":3,"names":["React","useState","Grid","Card","CardContent","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Snackbar","useNavigate","useQuery","useMutation","useQueryClient","useDispatch","useSelector","setMachines","addMachine","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","BLOCKS","addMachineApi","machine","data","post","console","log","fetchMachines","get","completeMachineApi","id","deleteMachineApi","delete","MachineGrid","_s","navigate","dispatch","machines","state","list","queryClient","queryKey","queryFn","staleTime","onSuccess","select","Array","isArray","sort","a","b","blockNo","refetchOnWindowFocus","refetchOnMount","addMachineMutation","mutationFn","invalidateQueries","completeMachineMutation","deleteMachineMutation","open","setOpen","selectedBlock","setSelectedBlock","form","setForm","model","productNo","snackbar","setSnackbar","message","action","blocks","from","length","_","i","find","m","block","handleAddClick","blockIdx","blockMachine","handleAddMachine","test","exists","some","mutateAsync","name","status","completed","masterCardInfo","electricDrawingPath","machineNo","String","markComplete","color","size","onClick","removeMachine","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","sx","mt","background","minHeight","p","map","idx","item","xs","sm","md","textAlign","variant","onClose","label","value","onChange","e","target","fullWidth","margin","autoFocus","inputProps","maxLength","autoHideDuration","_c","$RefreshReg$"],"sources":["D:/Krunal/catalisProject/frontend/src/MachineGrid.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Snackbar } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setMachines, addMachine } from './machineSlice';\r\nimport axios from 'axios';\r\n\r\nconst BLOCKS = 12;\r\n\r\nconst addMachineApi = async (machine) => {\r\n\tconst { data } = await axios.post('/api/machines', machine);\r\n\t// Debug: confirm component mount\r\nconsole.log('addMachineApi : ',data);\r\n\treturn data;\r\n};\r\n\r\nconst fetchMachines = async () => {\r\n\tconst { data } = await axios.get('/api/machines');\r\n\treturn data;\r\n};\r\n\r\nconst completeMachineApi = async (id) => {\r\n\tconst { data } = await axios.post(`/api/machines/${id}/complete`);\r\n\treturn data;\r\n};\r\n\r\nconst deleteMachineApi = async (id) => {\r\n\tawait axios.delete(`/api/machines/${id}`);\r\n};\r\n\r\nfunction MachineGrid() {\r\n\tconst navigate = useNavigate();\r\n\tconst dispatch = useDispatch();\r\n\tconst machines = useSelector(state => state.machines.list);\r\n\tconst queryClient = useQueryClient();\r\n\r\n\t// React Query: fetch machines, cache for 5 minutes, show old data immediately\r\n\tuseQuery({\r\n\t\tqueryKey: ['machines'],\r\n\t\tqueryFn: fetchMachines,\r\n\t\tstaleTime: 5 * 60 * 1000, // 5 minutes\r\n\t\tonSuccess: (data) => {\r\n\t\t\tdispatch(setMachines(data));\r\n\t\t},\r\n\t\t// Use select to always keep machines in correct block order\r\n\t\tselect: data => Array.isArray(data) ? data.sort((a, b) => (a.blockNo || 0) - (b.blockNo || 0)) : [],\r\n\t\trefetchOnWindowFocus: false,\r\n\t\trefetchOnMount: false,\r\n\t});\r\n\r\n\t// Mutations\r\n\tconst addMachineMutation = useMutation({\r\n\t\tmutationFn: addMachineApi,\r\n\t\tonSuccess: () => {\r\n\t\t\tqueryClient.invalidateQueries({ queryKey: ['machines'] });\r\n\t\t}\r\n\t});\r\n\tconst completeMachineMutation = useMutation({\r\n\t\tmutationFn: completeMachineApi,\r\n\t\tonSuccess: () => queryClient.invalidateQueries({ queryKey: ['machines'] })\r\n\t});\r\n\tconst deleteMachineMutation = useMutation({\r\n\t\tmutationFn: deleteMachineApi,\r\n\t\tonSuccess: () => queryClient.invalidateQueries({ queryKey: ['machines'] })\r\n\t});\r\n\r\n\t// UI state\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [selectedBlock, setSelectedBlock] = useState(null);\r\n\tconst [form, setForm] = useState({ model: '', productNo: '' });\r\n\tconst [snackbar, setSnackbar] = useState({ open: false, message: '', action: null });\r\n\r\n\t// Always 12 blocks, fill with machines or empty\r\n\tconst blocks = Array.from({ length: BLOCKS }, (_, i) => {\r\n\t\tconst machine = machines.find(m => m.blockNo === i + 1);\r\n\t\treturn machine ? { ...machine, block: i + 1 } : { block: i + 1 };\r\n\t});\r\n\r\n\tconst handleAddClick = (blockIdx) => {\r\n\t\t// Prevent adding to an occupied block\r\n\t\tconst blockMachine = machines.find(m => m.blockNo === blockIdx + 1);\r\n\t\tif (blockMachine) {\r\n\t\t\tsetSnackbar({ open: true, message: 'This block already has a machine. Please select an empty block.', action: null });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelectedBlock(blockIdx);\r\n\t\tsetForm({ model: '', productNo: '' });\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleAddMachine = async () => {\r\n\t\t// 7-digit validation\r\n\t\tif (!form.model || !/^\\d{7}$/.test(form.productNo)) {\r\n\t\t\tsetSnackbar({ open: true, message: 'Enter model and unique 7-digit machine no.', action: null });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Uniqueness validation\r\n\t\tconst exists = machines.some(m => m.productNo === form.productNo);\r\n\t\tif (exists) {\r\n\t\t\tsetSnackbar({ open: true, message: 'Machine no. must be unique!', action: null });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait addMachineMutation.mutateAsync({\r\n\t\t\tname: `M/C-${selectedBlock + 1}`,\r\n\t\t\tstatus: 'INCOMPLETE',\r\n\t\t\tcompleted: false,\r\n\t\t\tmasterCardInfo: '',\r\n\t\t\telectricDrawingPath: '',\r\n\t\t\tmachineNo: String(selectedBlock + 1),\r\n\t\t\tmodel: form.model,\r\n\t\t\tproductNo: form.productNo,\r\n\t\t\tblockNo: selectedBlock + 1\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t\tsetSelectedBlock(null);\r\n\t};\r\n\r\n\tconst markComplete = async (machine) => {\r\n\t\tawait completeMachineMutation.mutateAsync(machine.id);\r\n\t\tsetSnackbar({\r\n\t\t\topen: true,\r\n\t\t\tmessage: 'Would you like to remove this machine from shopfloor?',\r\n\t\t\taction: (\r\n\t\t\t\t<Button color=\"inherit\" size=\"small\" onClick={() => removeMachine(machine.id)}>\r\n\t\t\t\t\tYes, Remove\r\n\t\t\t\t</Button>\r\n\t\t\t),\r\n\t\t});\r\n\t};\r\n\r\n\tconst removeMachine = async (id) => {\r\n\t\tawait deleteMachineMutation.mutateAsync(id);\r\n\t\tsetSnackbar({ open: true, message: 'Machine removed from shopfloor and added to completed table.', action: null });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container spacing={2} sx={{ mt: 2, background: '#fff', minHeight: '80vh', p: 2 }}>\r\n\t\t\t\t{blocks.map((m, idx) => (\r\n\t\t\t\t\t<Grid item xs={6} sm={4} md={3} key={idx}>\r\n\t\t\t\t\t\t<Card sx={{ background: m.completed ? '#c8e6c9' : (m.status === 'INCOMPLETE' ? '#ffcdd2' : '#fff'), minHeight: 120 }}>\r\n\t\t\t\t\t\t\t<CardContent sx={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">Machine No. {m.block}</Typography>\r\n\t\t\t\t\t\t\t\t{m.id ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Model: {m.model}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">Product No.: {m.productNo}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={() => navigate(`/machine/${m.id}`)} sx={{ mt: 1 }}>View Details</Button>\r\n\t\t\t\t\t\t\t\t\t\t{!m.completed && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"warning\" sx={{ mt: 1 }} onClick={() => markComplete(m)}>Mark as Complete</Button>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" sx={{ mt: 2 }} onClick={() => handleAddClick(idx)}>Add Machine</Button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t\t<Dialog open={open} onClose={() => setOpen(false)}>\r\n\t\t\t\t<DialogTitle>Add Machine</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField label=\"Model\" value={form.model} onChange={e => setForm({ ...form, model: e.target.value })} fullWidth margin=\"normal\" autoFocus />\r\n\t\t\t\t\t<TextField label=\"Machine No. (7 digits)\" value={form.productNo} onChange={e => setForm({ ...form, productNo: e.target.value })} fullWidth margin=\"normal\" inputProps={{ maxLength: 7 }} />\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={() => setOpen(false)}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={handleAddMachine} variant=\"contained\">Add</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t\t<Snackbar open={snackbar.open} autoHideDuration={6000} onClose={() => setSnackbar({ ...snackbar, open: false })} message={snackbar.message} action={snackbar.action} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default MachineGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}