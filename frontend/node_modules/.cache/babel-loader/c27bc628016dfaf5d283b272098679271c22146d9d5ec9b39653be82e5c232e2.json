{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\catalisProject\\\\frontend\\\\src\\\\MachineGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Grid, Card, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Snackbar } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMachines, addMachine } from './machineSlice';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BLOCKS = 12;\nconst addMachineApi = async formData => {\n  const {\n    data\n  } = await axios.post('/api/machines', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return data;\n};\nconst fetchMachines = async () => {\n  const {\n    data\n  } = await axios.get('/api/machines');\n  return data;\n};\nconst completeMachineApi = async id => {\n  const {\n    data\n  } = await axios.post(`/api/machines/${id}/complete`);\n  return data;\n};\nconst deleteMachineApi = async id => {\n  await axios.delete(`/api/machines/${id}`);\n};\nfunction MachineGrid() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const machines = useSelector(state => state.machines.list);\n  const queryClient = useQueryClient();\n  const [pdfFile, setPdfFile] = useState(null);\n  const fileInputRef = useRef();\n\n  // React Query: fetch machines, cache for 5 minutes, show old data immediately\n  useQuery({\n    queryKey: ['machines'],\n    queryFn: fetchMachines,\n    staleTime: 5 * 60 * 1000,\n    // 5 minutes\n    // onSuccess: (data) => {\n    // \tdispatch(setMachines(data));\n    // \tconsole.log('Machines fetched and stored in Redux:', data);\n    // },\t\t\n    // Use select to always keep machines in correct block order\n    select: data => Array.isArray(data) ? data.sort((a, b) => (a.blockNo || 0) - (b.blockNo || 0)) : [],\n    refetchOnWindowFocus: false\n    // refetchOnMount: false,\n  });\n\n  // Mutations\n  const addMachineMutation = useMutation({\n    mutationFn: addMachineApi,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['machines']\n      });\n    }\n  });\n  const completeMachineMutation = useMutation({\n    mutationFn: completeMachineApi,\n    onSuccess: () => queryClient.invalidateQueries({\n      queryKey: ['machines']\n    })\n  });\n  const deleteMachineMutation = useMutation({\n    mutationFn: deleteMachineApi,\n    onSuccess: () => queryClient.invalidateQueries({\n      queryKey: ['machines']\n    })\n  });\n\n  // UI state\n  const [open, setOpen] = useState(false);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const MACHINE_MODELS = ['CPT425-SERRA', 'CPT525-SERRA', 'CPT625-SERRA', 'CPT650-SERRA', 'CPT825-SERRA'];\n  const [form, setForm] = useState({\n    model: '',\n    productNo: ''\n  });\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    action: null\n  });\n\n  // Always 12 blocks, fill with machines or empty\n  const blocks = Array.from({\n    length: BLOCKS\n  }, (_, i) => {\n    const machine = machines.find(m => m.blockNo === i + 1);\n    return machine ? {\n      ...machine,\n      block: i + 1\n    } : {\n      block: i + 1\n    };\n  });\n  const handleAddClick = blockIdx => {\n    // Prevent adding to an occupied block\n    const blockMachine = machines.find(m => m.blockNo === blockIdx + 1);\n    if (blockMachine) {\n      setSnackbar({\n        open: true,\n        message: 'This block already has a machine. Please select an empty block.',\n        action: null\n      });\n      return;\n    }\n    setSelectedBlock(blockIdx);\n    setForm({\n      model: '',\n      productNo: ''\n    });\n    setOpen(true);\n    setPdfFile(null);\n  };\n  const handleAddMachine = async () => {\n    if (!form.model || !/^\\d{7}$/.test(form.productNo)) {\n      setSnackbar({\n        open: true,\n        message: 'Enter model and unique 7-digit machine no.',\n        action: null\n      });\n      return;\n    }\n    if (!pdfFile) {\n      setSnackbar({\n        open: true,\n        message: 'Please upload a master order PDF.',\n        action: null\n      });\n      return;\n    }\n    const exists = machines.some(m => m.productNo === form.productNo);\n    if (exists) {\n      setSnackbar({\n        open: true,\n        message: 'Machine no. must be unique!',\n        action: null\n      });\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', `M/C-${selectedBlock + 1}`);\n    formData.append('status', 'INCOMPLETE');\n    formData.append('completed', false);\n    formData.append('masterCardInfo', '');\n    formData.append('electricDrawingPath', '');\n    formData.append('machineNo', String(selectedBlock + 1));\n    formData.append('model', form.model);\n    formData.append('productNo', form.productNo);\n    formData.append('blockNo', selectedBlock + 1);\n    formData.append('pdf', pdfFile);\n    try {\n      await addMachineMutation.mutateAsync(formData);\n      setOpen(false);\n      setSelectedBlock(null);\n      setPdfFile(null);\n    } catch (err) {\n      var _err$response;\n      setSnackbar({\n        open: true,\n        message: (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || 'Failed to add machine.',\n        action: null\n      });\n    }\n  };\n  const markComplete = async machine => {\n    await completeMachineMutation.mutateAsync(machine.id);\n    setSnackbar({\n      open: true,\n      message: 'Would you like to remove this machine from shopfloor?',\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        size: \"small\",\n        onClick: () => removeMachine(machine.id),\n        children: \"Yes, Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this)\n    });\n  };\n  const removeMachine = async id => {\n    await deleteMachineMutation.mutateAsync(id);\n    setSnackbar({\n      open: true,\n      message: 'Machine removed from shopfloor and added to completed table.',\n      action: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        mt: 2,\n        background: '#fff',\n        minHeight: '80vh',\n        p: 2\n      },\n      children: blocks.map((m, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 4,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            background: m.completed ? '#c8e6c9' : m.status === 'INCOMPLETE' ? '#ffcdd2' : '#fff',\n            minHeight: 120\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Machine No. \", m.block]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 9\n            }, this), m.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: [\"Model: \", m.model]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: [\"Product No.: \", m.productNo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => navigate(`/machine/${m.id}`),\n                sx: {\n                  mt: 1\n                },\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 11\n              }, this), !m.completed && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"warning\",\n                sx: {\n                  mt: 1\n                },\n                onClick: () => markComplete(m),\n                children: \"Mark as Complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              sx: {\n                mt: 2\n              },\n              onClick: () => handleAddClick(idx),\n              children: \"Add Machine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Machine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"Model\",\n          value: form.model,\n          onChange: e => setForm({\n            ...form,\n            model: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          SelectProps: {\n            native: true\n          },\n          autoFocus: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this), MACHINE_MODELS.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model,\n            children: model\n          }, model, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Machine No. (7 digits)\",\n          value: form.productNo,\n          onChange: e => setForm({\n            ...form,\n            productNo: e.target.value\n          }),\n          fullWidth: true,\n          margin: \"normal\",\n          inputProps: {\n            maxLength: 7\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          type: \"file\",\n          accept: \"application/pdf\",\n          style: {\n            display: 'block',\n            marginTop: 16\n          },\n          onChange: e => setPdfFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddMachine,\n          variant: \"contained\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      message: snackbar.message,\n      action: snackbar.action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(MachineGrid, \"qgEmn2iAgnLZoyb/KbKHm4ZFqNM=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useQueryClient, useQuery, useMutation, useMutation, useMutation];\n});\n_c = MachineGrid;\nexport default MachineGrid;\nvar _c;\n$RefreshReg$(_c, \"MachineGrid\");","map":{"version":3,"names":["React","useState","useRef","Grid","Card","CardContent","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Snackbar","useNavigate","useQuery","useMutation","useQueryClient","useDispatch","useSelector","setMachines","addMachine","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","BLOCKS","addMachineApi","formData","data","post","headers","fetchMachines","get","completeMachineApi","id","deleteMachineApi","delete","MachineGrid","_s","navigate","dispatch","machines","state","list","queryClient","pdfFile","setPdfFile","fileInputRef","queryKey","queryFn","staleTime","select","Array","isArray","sort","a","b","blockNo","refetchOnWindowFocus","addMachineMutation","mutationFn","onSuccess","invalidateQueries","completeMachineMutation","deleteMachineMutation","open","setOpen","selectedBlock","setSelectedBlock","MACHINE_MODELS","form","setForm","model","productNo","snackbar","setSnackbar","message","action","blocks","from","length","_","i","machine","find","m","block","handleAddClick","blockIdx","blockMachine","handleAddMachine","test","exists","some","FormData","append","String","mutateAsync","err","_err$response","response","markComplete","color","size","onClick","removeMachine","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","sx","mt","background","minHeight","p","map","idx","item","xs","sm","md","completed","status","textAlign","variant","onClose","label","value","onChange","e","target","fullWidth","margin","SelectProps","native","autoFocus","inputProps","maxLength","ref","type","accept","style","display","marginTop","files","autoHideDuration","_c","$RefreshReg$"],"sources":["D:/Krunal/catalisProject/frontend/src/MachineGrid.jsx"],"sourcesContent":["import React, { useState , useRef} from 'react';\r\nimport { Grid, Card, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Snackbar } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setMachines, addMachine } from './machineSlice';\r\nimport axios from 'axios';\r\n\r\nconst BLOCKS = 12;\r\n\r\nconst addMachineApi = async (formData) => {\r\n\tconst { data } = await axios.post('/api/machines', formData, {\r\n\t\theaders: { 'Content-Type': 'multipart/form-data' },\r\n\t});\r\n\treturn data;\r\n};\r\n\r\nconst fetchMachines = async () => {\r\n\tconst { data } = await axios.get('/api/machines');\r\n\treturn data;\r\n};\r\n\r\nconst completeMachineApi = async (id) => {\r\n\tconst { data } = await axios.post(`/api/machines/${id}/complete`);\r\n\treturn data;\r\n};\r\n\r\nconst deleteMachineApi = async (id) => {\r\n\tawait axios.delete(`/api/machines/${id}`);\r\n};\r\n\r\n\r\n\r\nfunction MachineGrid() {\r\n\tconst navigate = useNavigate();\r\n\tconst dispatch = useDispatch();\r\n\tconst machines = useSelector(state => state.machines.list);\r\n\tconst queryClient = useQueryClient();\r\n\tconst [pdfFile, setPdfFile] = useState(null);\r\n\tconst fileInputRef = useRef();\r\n\r\n\t// React Query: fetch machines, cache for 5 minutes, show old data immediately\r\n\tuseQuery({\r\n\t\tqueryKey: ['machines'],\r\n\t\tqueryFn: fetchMachines,\r\n\t\tstaleTime: 5 * 60 * 1000, // 5 minutes\r\n\t\t// onSuccess: (data) => {\r\n\t\t// \tdispatch(setMachines(data));\r\n\t\t// \tconsole.log('Machines fetched and stored in Redux:', data);\r\n\t\t// },\t\t\r\n\t\t// Use select to always keep machines in correct block order\r\n\t\tselect: data => Array.isArray(data) ? data.sort((a, b) => (a.blockNo || 0) - (b.blockNo || 0)) : [],\r\n\t\trefetchOnWindowFocus: false,\r\n\t\t// refetchOnMount: false,\r\n\t\t\r\n\t});\r\n\r\n\t// Mutations\r\n\tconst addMachineMutation = useMutation({\r\n\t\tmutationFn: addMachineApi,\r\n\t\tonSuccess: () => {\r\n\t\t\tqueryClient.invalidateQueries({ queryKey: ['machines'] });\r\n\t\t}\r\n\t});\r\n\tconst completeMachineMutation = useMutation({\r\n\t\tmutationFn: completeMachineApi,\r\n\t\tonSuccess: () => queryClient.invalidateQueries({ queryKey: ['machines'] })\r\n\t});\r\n\tconst deleteMachineMutation = useMutation({\r\n\t\tmutationFn: deleteMachineApi,\r\n\t\tonSuccess: () => queryClient.invalidateQueries({ queryKey: ['machines'] })\r\n\t});\r\n\r\n\t// UI state\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [selectedBlock, setSelectedBlock] = useState(null);\r\n\tconst MACHINE_MODELS = [\r\n\t\t'CPT425-SERRA',\r\n\t\t'CPT525-SERRA',\r\n\t\t'CPT625-SERRA',\r\n\t\t'CPT650-SERRA',\r\n\t\t'CPT825-SERRA',\r\n\t];\r\n\tconst [form, setForm] = useState({ model: '', productNo: '' });\r\n\tconst [snackbar, setSnackbar] = useState({ open: false, message: '', action: null });\r\n\r\n\t// Always 12 blocks, fill with machines or empty\r\n\tconst blocks = Array.from({ length: BLOCKS }, (_, i) => {\r\n\t\tconst machine = machines.find(m => m.blockNo === i + 1);\r\n\t\treturn machine ? { ...machine, block: i + 1 } : { block: i + 1 };\r\n\t});\r\n\r\n\tconst handleAddClick = (blockIdx) => {\r\n\t\t// Prevent adding to an occupied block\r\n\t\tconst blockMachine = machines.find(m => m.blockNo === blockIdx + 1);\r\n\t\tif (blockMachine) {\r\n\t\t\tsetSnackbar({ open: true, message: 'This block already has a machine. Please select an empty block.', action: null });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelectedBlock(blockIdx);\r\n\t\tsetForm({ model: '', productNo: '' });\r\n\t\tsetOpen(true);\r\n\t\tsetPdfFile(null);\r\n\t};\r\n\r\n\tconst handleAddMachine = async () => {\r\n  if (!form.model || !/^\\d{7}$/.test(form.productNo)) {\r\n    setSnackbar({ open: true, message: 'Enter model and unique 7-digit machine no.', action: null });\r\n    return;\r\n  }\r\n  if (!pdfFile) {\r\n    setSnackbar({ open: true, message: 'Please upload a master order PDF.', action: null });\r\n    return;\r\n  }\r\n  const exists = machines.some(m => m.productNo === form.productNo);\r\n  if (exists) {\r\n    setSnackbar({ open: true, message: 'Machine no. must be unique!', action: null });\r\n    return;\r\n  }\r\n\tconst formData = new FormData();\r\n\tformData.append('name', `M/C-${selectedBlock + 1}`);\r\n\tformData.append('status', 'INCOMPLETE');\r\n\tformData.append('completed', false);\r\n\tformData.append('masterCardInfo', '');\r\n\tformData.append('electricDrawingPath', '');\r\n\tformData.append('machineNo', String(selectedBlock + 1));\r\n\tformData.append('model', form.model);\r\n\tformData.append('productNo', form.productNo);\r\n\tformData.append('blockNo', selectedBlock + 1);\r\n\tformData.append('pdf', pdfFile);\r\n\ttry {\r\n\t\tawait addMachineMutation.mutateAsync(formData);\r\n\t\tsetOpen(false);\r\n\t\tsetSelectedBlock(null);\r\n\t\tsetPdfFile(null);\r\n\t} catch (err) {\r\n\t\tsetSnackbar({ open: true, message: err?.response?.data || 'Failed to add machine.', action: null });\r\n\t}\r\n};\r\n\r\n\tconst markComplete = async (machine) => {\r\n\t\tawait completeMachineMutation.mutateAsync(machine.id);\r\n\t\tsetSnackbar({\r\n\t\t\topen: true,\r\n\t\t\tmessage: 'Would you like to remove this machine from shopfloor?',\r\n\t\t\taction: (\r\n\t\t\t\t<Button color=\"inherit\" size=\"small\" onClick={() => removeMachine(machine.id)}>\r\n\t\t\t\t\tYes, Remove\r\n\t\t\t\t</Button>\r\n\t\t\t),\r\n\t\t});\r\n\t};\r\n\r\n\tconst removeMachine = async (id) => {\r\n\t\tawait deleteMachineMutation.mutateAsync(id);\r\n\t\tsetSnackbar({ open: true, message: 'Machine removed from shopfloor and added to completed table.', action: null });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container spacing={2} sx={{ mt: 2, background: '#fff', minHeight: '80vh', p: 2 }}>\r\n\t\t\t\t{blocks.map((m, idx) => (\r\n\t\t\t\t\t<Grid item xs={6} sm={4} md={3} key={idx}>\r\n\t\t\t\t\t\t<Card sx={{ background: m.completed ? '#c8e6c9' : (m.status === 'INCOMPLETE' ? '#ffcdd2' : '#fff'), minHeight: 120 }}>\r\n\t\t\t\t\t\t\t<CardContent sx={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">Machine No. {m.block}</Typography>\r\n\t\t\t\t\t\t\t\t{m.id ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Model: {m.model}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">Product No.: {m.productNo}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={() => navigate(`/machine/${m.id}`)} sx={{ mt: 1 }}>View Details</Button>\r\n\t\t\t\t\t\t\t\t\t\t{!m.completed && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"warning\" sx={{ mt: 1 }} onClick={() => markComplete(m)}>Mark as Complete</Button>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" sx={{ mt: 2 }} onClick={() => handleAddClick(idx)}>Add Machine</Button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t\t<Dialog open={open} onClose={() => setOpen(false)}>\r\n\t\t\t\t<DialogTitle>Add Machine</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tselect\r\n\t\t\t\t\t\tlabel=\"Model\"\r\n\t\t\t\t\t\tvalue={form.model}\r\n\t\t\t\t\t\tonChange={e => setForm({ ...form, model: e.target.value })}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\tSelectProps={{ native: true }}\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value=\"\">Select Model</option>\r\n\t\t\t\t\t\t{MACHINE_MODELS.map(model => (\r\n\t\t\t\t\t\t\t<option key={model} value={model}>{model}</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TextField>\r\n\t\t\t\t\t<TextField label=\"Machine No. (7 digits)\" value={form.productNo} onChange={e => setForm({ ...form, productNo: e.target.value })} fullWidth margin=\"normal\" inputProps={{ maxLength: 7 }} />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={fileInputRef}\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\taccept=\"application/pdf\"\r\n\t\t\t\t\t\tstyle={{ display: 'block', marginTop: 16 }}\r\n\t\t\t\t\t\tonChange={e => setPdfFile(e.target.files[0])}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={() => setOpen(false)}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={handleAddMachine} variant=\"contained\">Add</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t\t<Snackbar open={snackbar.open} autoHideDuration={6000} onClose={() => setSnackbar({ ...snackbar, open: false })} message={snackbar.message} action={snackbar.action} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default MachineGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}