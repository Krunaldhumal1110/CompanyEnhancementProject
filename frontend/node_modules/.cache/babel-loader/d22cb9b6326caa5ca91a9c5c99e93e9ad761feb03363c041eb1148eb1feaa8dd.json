{"ast":null,"code":"import _objectSpread from\"D:/Krunal/catalisProject/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useRef}from'react';import{Grid,Card,CardContent,Typography,Button,Dialog,DialogTitle,DialogContent,DialogActions,TextField,Snackbar}from'@mui/material';import{useNavigate}from'react-router-dom';import{useQuery,useMutation,useQueryClient}from'@tanstack/react-query';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BLOCKS=12;// API calls\nconst addMachineApi=async formData=>{const{data}=await axios.post('/api/machines',formData);return data;};const fetchMachines=async()=>{const{data}=await axios.get('/api/machines');return data;};const completeMachineApi=async id=>{const{data}=await axios.post(\"/api/machines/\".concat(id,\"/complete\"));return data;};const deleteMachineApi=async id=>{await axios.delete(\"/api/machines/\".concat(id));};function MachineGrid(){const navigate=useNavigate();const queryClient=useQueryClient();const[pdfFile,setPdfFile]=useState(null);const fileInputRef=useRef();// ✅ React Query: fetch machines directly\nconst{data:machines=[]}=useQuery({queryKey:['machines'],queryFn:fetchMachines,staleTime:5*60*1000,// keep cached for 5 minutes\nselect:data=>Array.isArray(data)?data.sort((a,b)=>(a.blockNo||0)-(b.blockNo||0)):[],refetchOnWindowFocus:false});// Mutations\nconst addMachineMutation=useMutation({mutationFn:addMachineApi,onSuccess:()=>{queryClient.invalidateQueries({queryKey:['machines']});}});const completeMachineMutation=useMutation({mutationFn:completeMachineApi,onSuccess:()=>queryClient.invalidateQueries({queryKey:['machines']})});const deleteMachineMutation=useMutation({mutationFn:deleteMachineApi,onSuccess:()=>queryClient.invalidateQueries({queryKey:['machines']})});// UI state\nconst[open,setOpen]=useState(false);const[selectedBlock,setSelectedBlock]=useState(null);const MACHINE_MODELS=['CPT425-SERRA','CPT525-SERRA','CPT625-SERRA','CPT650-SERRA','CPT825-SERRA'];const[form,setForm]=useState({model:'',productNo:''});const[snackbar,setSnackbar]=useState({open:false,message:'',action:null});// Always 12 blocks, fill with machines or empty\nconst blocks=Array.from({length:BLOCKS},(_,i)=>{const machine=machines.find(m=>m.blockNo===i+1);return machine?_objectSpread(_objectSpread({},machine),{},{block:i+1}):{block:i+1};});// Handlers\nconst handleAddClick=blockIdx=>{const blockMachine=machines.find(m=>m.blockNo===blockIdx+1);if(blockMachine){setSnackbar({open:true,message:'This block already has a machine. Please select an empty block.',action:null});return;}setSelectedBlock(blockIdx);setForm({model:'',productNo:''});setOpen(true);setPdfFile(null);};const handleAddMachine=async()=>{if(!form.model||!/^\\d{7}$/.test(form.productNo)){setSnackbar({open:true,message:'Enter model and unique 7-digit machine no.',action:null});return;}if(!pdfFile){setSnackbar({open:true,message:'Please upload a master order PDF.',action:null});return;}const exists=machines.some(m=>m.productNo===form.productNo);if(exists){setSnackbar({open:true,message:'Machine no. must be unique!',action:null});return;}const formData=new FormData();formData.append('name',\"M/C-\".concat(selectedBlock+1));formData.append('status','INCOMPLETE');formData.append('completed',false);formData.append('masterCardInfo','');formData.append('electricDrawingPath','');formData.append('machineNo',String(selectedBlock+1));formData.append('model',form.model);formData.append('productNo',form.productNo);formData.append('blockNo',selectedBlock+1);formData.append('pdf',pdfFile);try{await addMachineMutation.mutateAsync(formData);setOpen(false);setSelectedBlock(null);setPdfFile(null);}catch(err){var _err$response;let msg='Upload failed';if(err!==null&&err!==void 0&&(_err$response=err.response)!==null&&_err$response!==void 0&&_err$response.data){if(typeof err.response.data==='string'){msg=err.response.data;}else if(typeof err.response.data==='object'&&err.response.data.message){msg=err.response.data.message;}}setSnackbar({open:true,message:msg,action:null});}};const markComplete=async machine=>{await completeMachineMutation.mutateAsync(machine.id);setSnackbar({open:true,message:'Would you like to remove this machine from shopfloor?',action:/*#__PURE__*/_jsx(Button,{color:\"inherit\",size:\"small\",onClick:()=>removeMachine(machine.id),children:\"Yes, Remove\"})});};const removeMachine=async id=>{await deleteMachineMutation.mutateAsync(id);setSnackbar({open:true,message:'Machine removed from shopfloor and added to completed table.',action:null});};// UI\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,sx:{mt:2,background:'#fff',minHeight:'80vh',p:2},children:blocks.map((m,idx)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:6,sm:4,md:3,children:/*#__PURE__*/_jsx(Card,{sx:{background:m.completed?'#c8e6c9':m.status==='INCOMPLETE'?'#ffcdd2':'#fff',minHeight:120},children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Machine No. \",m.block]}),m.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[\"Model: \",m.model]}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",children:[\"Product No.: \",m.productNo]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>navigate(\"/machine/\".concat(m.id)),sx:{mt:1},children:\"View Details\"}),!m.completed&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"warning\",sx:{mt:1},onClick:()=>markComplete(m),children:\"Mark as Complete\"})]}):/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",sx:{mt:2},onClick:()=>handleAddClick(idx),children:\"Add Machine\"})]})})},idx))}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:()=>setOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Add Machine\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(TextField,{select:true,label:\"\",value:form.model,onChange:e=>setForm(_objectSpread(_objectSpread({},form),{},{model:e.target.value})),fullWidth:true,margin:\"normal\",SelectProps:{native:true},autoFocus:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Model\"}),MACHINE_MODELS.map(model=>/*#__PURE__*/_jsx(\"option\",{value:model,children:model},model))]}),/*#__PURE__*/_jsx(TextField,{label:\"Machine No. (7 digits)\",value:form.productNo,onChange:e=>setForm(_objectSpread(_objectSpread({},form),{},{productNo:e.target.value})),fullWidth:true,margin:\"normal\",inputProps:{maxLength:7}}),/*#__PURE__*/_jsx(\"input\",{ref:fileInputRef,type:\"file\",accept:\"application/pdf\",style:{display:'block',marginTop:16},onChange:e=>setPdfFile(e.target.files[0])})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleAddMachine,variant:\"contained\",children:\"Add\"})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbar.open,autoHideDuration:6000,onClose:()=>setSnackbar(_objectSpread(_objectSpread({},snackbar),{},{open:false})),message:snackbar.message,action:snackbar.action})]});}export default MachineGrid;","map":{"version":3,"names":["React","useState","useRef","Grid","Card","CardContent","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Snackbar","useNavigate","useQuery","useMutation","useQueryClient","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BLOCKS","addMachineApi","formData","data","post","fetchMachines","get","completeMachineApi","id","concat","deleteMachineApi","delete","MachineGrid","navigate","queryClient","pdfFile","setPdfFile","fileInputRef","machines","queryKey","queryFn","staleTime","select","Array","isArray","sort","a","b","blockNo","refetchOnWindowFocus","addMachineMutation","mutationFn","onSuccess","invalidateQueries","completeMachineMutation","deleteMachineMutation","open","setOpen","selectedBlock","setSelectedBlock","MACHINE_MODELS","form","setForm","model","productNo","snackbar","setSnackbar","message","action","blocks","from","length","_","i","machine","find","m","_objectSpread","block","handleAddClick","blockIdx","blockMachine","handleAddMachine","test","exists","some","FormData","append","String","mutateAsync","err","_err$response","msg","response","markComplete","color","size","onClick","removeMachine","children","container","spacing","sx","mt","background","minHeight","p","map","idx","item","xs","sm","md","completed","status","textAlign","variant","onClose","label","value","onChange","e","target","fullWidth","margin","SelectProps","native","autoFocus","inputProps","maxLength","ref","type","accept","style","display","marginTop","files","autoHideDuration"],"sources":["D:/Krunal/catalisProject/frontend/src/MachineGrid.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Snackbar } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport axios from 'axios';\r\n\r\nconst BLOCKS = 12;\r\n\r\n// API calls\r\nconst addMachineApi = async (formData) => {\r\n  const { data } = await axios.post('/api/machines', formData);\r\n  return data;\r\n};\r\n\r\nconst fetchMachines = async () => {\r\n  const { data } = await axios.get('/api/machines');\r\n  return data;\r\n};\r\n\r\nconst completeMachineApi = async (id) => {\r\n  const { data } = await axios.post(`/api/machines/${id}/complete`);\r\n  return data;\r\n};\r\n\r\nconst deleteMachineApi = async (id) => {\r\n  await axios.delete(`/api/machines/${id}`);\r\n};\r\n\r\nfunction MachineGrid() {\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const fileInputRef = useRef();\r\n\r\n  // ✅ React Query: fetch machines directly\r\n  const { data: machines = [] } = useQuery({\r\n    queryKey: ['machines'],\r\n    queryFn: fetchMachines,\r\n    staleTime: 5 * 60 * 1000, // keep cached for 5 minutes\r\n    select: (data) =>\r\n      Array.isArray(data)\r\n        ? data.sort((a, b) => (a.blockNo || 0) - (b.blockNo || 0))\r\n        : [],\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  // Mutations\r\n  const addMachineMutation = useMutation({\r\n    mutationFn: addMachineApi,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['machines'] });\r\n    },\r\n  });\r\n\r\n  const completeMachineMutation = useMutation({\r\n    mutationFn: completeMachineApi,\r\n    onSuccess: () => queryClient.invalidateQueries({ queryKey: ['machines'] }),\r\n  });\r\n\r\n  const deleteMachineMutation = useMutation({\r\n    mutationFn: deleteMachineApi,\r\n    onSuccess: () => queryClient.invalidateQueries({ queryKey: ['machines'] }),\r\n  });\r\n\r\n  // UI state\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const MACHINE_MODELS = [\r\n    'CPT425-SERRA',\r\n    'CPT525-SERRA',\r\n    'CPT625-SERRA',\r\n    'CPT650-SERRA',\r\n    'CPT825-SERRA',\r\n  ];\r\n  const [form, setForm] = useState({ model: '', productNo: '' });\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', action: null });\r\n\r\n  // Always 12 blocks, fill with machines or empty\r\n  const blocks = Array.from({ length: BLOCKS }, (_, i) => {\r\n    const machine = machines.find((m) => m.blockNo === i + 1);\r\n    return machine ? { ...machine, block: i + 1 } : { block: i + 1 };\r\n  });\r\n\r\n  // Handlers\r\n  const handleAddClick = (blockIdx) => {\r\n    const blockMachine = machines.find((m) => m.blockNo === blockIdx + 1);\r\n    if (blockMachine) {\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'This block already has a machine. Please select an empty block.',\r\n        action: null,\r\n      });\r\n      return;\r\n    }\r\n    setSelectedBlock(blockIdx);\r\n    setForm({ model: '', productNo: '' });\r\n    setOpen(true);\r\n    setPdfFile(null);\r\n  };\r\n\r\n  const handleAddMachine = async () => {\r\n    if (!form.model || !/^\\d{7}$/.test(form.productNo)) {\r\n      setSnackbar({ open: true, message: 'Enter model and unique 7-digit machine no.', action: null });\r\n      return;\r\n    }\r\n    if (!pdfFile) {\r\n      setSnackbar({ open: true, message: 'Please upload a master order PDF.', action: null });\r\n      return;\r\n    }\r\n    const exists = machines.some((m) => m.productNo === form.productNo);\r\n    if (exists) {\r\n      setSnackbar({ open: true, message: 'Machine no. must be unique!', action: null });\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', `M/C-${selectedBlock + 1}`);\r\n    formData.append('status', 'INCOMPLETE');\r\n    formData.append('completed', false);\r\n    formData.append('masterCardInfo', '');\r\n    formData.append('electricDrawingPath', '');\r\n    formData.append('machineNo', String(selectedBlock + 1));\r\n    formData.append('model', form.model);\r\n    formData.append('productNo', form.productNo);\r\n    formData.append('blockNo', selectedBlock + 1);\r\n    formData.append('pdf', pdfFile);\r\n\r\n    try {\r\n      await addMachineMutation.mutateAsync(formData);\r\n      setOpen(false);\r\n      setSelectedBlock(null);\r\n      setPdfFile(null);\r\n    } catch (err) {\r\n      let msg = 'Upload failed';\r\n      if (err?.response?.data) {\r\n        if (typeof err.response.data === 'string') {\r\n          msg = err.response.data;\r\n        } else if (typeof err.response.data === 'object' && err.response.data.message) {\r\n          msg = err.response.data.message;\r\n        }\r\n      }\r\n      setSnackbar({\r\n        open: true,\r\n        message: msg,\r\n        action: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const markComplete = async (machine) => {\r\n    await completeMachineMutation.mutateAsync(machine.id);\r\n    setSnackbar({\r\n      open: true,\r\n      message: 'Would you like to remove this machine from shopfloor?',\r\n      action: (\r\n        <Button color=\"inherit\" size=\"small\" onClick={() => removeMachine(machine.id)}>\r\n          Yes, Remove\r\n        </Button>\r\n      ),\r\n    });\r\n  };\r\n\r\n  const removeMachine = async (id) => {\r\n    await deleteMachineMutation.mutateAsync(id);\r\n    setSnackbar({\r\n      open: true,\r\n      message: 'Machine removed from shopfloor and added to completed table.',\r\n      action: null,\r\n    });\r\n  };\r\n\r\n  // UI\r\n  return (\r\n    <>\r\n      <Grid container spacing={2} sx={{ mt: 2, background: '#fff', minHeight: '80vh', p: 2 }}>\r\n        {blocks.map((m, idx) => (\r\n          <Grid item xs={6} sm={4} md={3} key={idx}>\r\n            <Card\r\n              sx={{\r\n                background: m.completed\r\n                  ? '#c8e6c9'\r\n                  : m.status === 'INCOMPLETE'\r\n                  ? '#ffcdd2'\r\n                  : '#fff',\r\n                minHeight: 120,\r\n              }}\r\n            >\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <Typography variant=\"h6\">Machine No. {m.block}</Typography>\r\n                {m.id ? (\r\n                  <>\r\n                    <Typography variant=\"subtitle1\">Model: {m.model}</Typography>\r\n                    <Typography variant=\"subtitle2\">Product No.: {m.productNo}</Typography>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={() => navigate(`/machine/${m.id}`)}\r\n                      sx={{ mt: 1 }}\r\n                    >\r\n                      View Details\r\n                    </Button>\r\n                    {!m.completed && (\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"warning\"\r\n                        sx={{ mt: 1 }}\r\n                        onClick={() => markComplete(m)}\r\n                      >\r\n                        Mark as Complete\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    sx={{ mt: 2 }}\r\n                    onClick={() => handleAddClick(idx)}\r\n                  >\r\n                    Add Machine\r\n                  </Button>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Add Machine Dialog */}\r\n      <Dialog open={open} onClose={() => setOpen(false)}>\r\n        <DialogTitle>Add Machine</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            select\r\n            label=\"\"\r\n            value={form.model}\r\n            onChange={(e) => setForm({ ...form, model: e.target.value })}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            SelectProps={{ native: true }}\r\n            autoFocus\r\n          >\r\n            <option value=\"\">Select Model</option>\r\n            {MACHINE_MODELS.map((model) => (\r\n              <option key={model} value={model}>\r\n                {model}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Machine No. (7 digits)\"\r\n            value={form.productNo}\r\n            onChange={(e) => setForm({ ...form, productNo: e.target.value })}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            inputProps={{ maxLength: 7 }}\r\n          />\r\n          <input\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            accept=\"application/pdf\"\r\n            style={{ display: 'block', marginTop: 16 }}\r\n            onChange={(e) => setPdfFile(e.target.files[0])}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n          <Button onClick={handleAddMachine} variant=\"contained\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        message={snackbar.message}\r\n        action={snackbar.action}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MachineGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}