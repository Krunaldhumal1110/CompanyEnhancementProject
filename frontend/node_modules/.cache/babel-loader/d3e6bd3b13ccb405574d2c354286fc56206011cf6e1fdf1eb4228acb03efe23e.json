{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\catalisProject\\\\frontend\\\\src\\\\MachineGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Card, CardContent, Typography, Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MachineGrid() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get('/api/machines').then(res => setMachines(res.data));\n  }, []);\n  const markComplete = async id => {\n    await axios.post(`/api/machines/${id}/complete`);\n    axios.get('/api/machines').then(res => setMachines(res.data));\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    sx: {\n      mt: 2,\n      background: '#fff',\n      minHeight: '80vh',\n      p: 2\n    },\n    children: machines.map(m => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      sm: 4,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          background: m.completed ? '#c8e6c9' : m.status === 'INCOMPLETE' ? '#ffcdd2' : '#fff'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: m.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: m.machineNo ? `Machine ${m.machineNo}` : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => navigate(`/machine/${m.id}`),\n            sx: {\n              mt: 1\n            },\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), m.completed ? /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"success.main\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"error.main\",\n              children: \"Incomplete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"warning\",\n              sx: {\n                mt: 1\n              },\n              onClick: () => markComplete(m.id),\n              children: \"Mark as Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, m.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(MachineGrid, \"zcSMN6XciD1f6V5Fy0rzEj6jVnM=\", false, function () {\n  return [useNavigate];\n});\n_c = MachineGrid;\nexport default MachineGrid;\nvar _c;\n$RefreshReg$(_c, \"MachineGrid\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Card","CardContent","Typography","Button","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MachineGrid","_s","machines","setMachines","navigate","get","then","res","data","markComplete","id","post","container","spacing","sx","mt","background","minHeight","p","children","map","m","item","xs","sm","md","completed","status","variant","name","fileName","_jsxFileName","lineNumber","columnNumber","machineNo","onClick","color","_c","$RefreshReg$"],"sources":["D:/Krunal/catalisProject/frontend/src/MachineGrid.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Button } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction MachineGrid() {\r\n  const [machines, setMachines] = useState([]);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    axios.get('/api/machines').then(res => setMachines(res.data));\r\n  }, []);\r\n\r\n  const markComplete = async (id) => {\r\n    await axios.post(`/api/machines/${id}/complete`);\r\n    axios.get('/api/machines').then(res => setMachines(res.data));\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} sx={{ mt: 2, background: '#fff', minHeight: '80vh', p: 2 }}>\r\n      {machines.map(m => (\r\n        <Grid item xs={6} sm={4} md={3} key={m.id}>\r\n          <Card sx={{ background: m.completed ? '#c8e6c9' : (m.status === 'INCOMPLETE' ? '#ffcdd2' : '#fff') }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">{m.name}</Typography>\r\n              <Typography variant=\"subtitle1\">{m.machineNo ? `Machine ${m.machineNo}` : ''}</Typography>\r\n              <Button variant=\"contained\" onClick={() => navigate(`/machine/${m.id}`)} sx={{ mt: 1 }}>View Details</Button>\r\n              {m.completed ? (\r\n                <Typography color=\"success.main\">Completed</Typography>\r\n              ) : (\r\n                <>\r\n                  <Typography color=\"error.main\">Incomplete</Typography>\r\n                  <Button variant=\"outlined\" color=\"warning\" sx={{ mt: 1 }} onClick={() => markComplete(m.id)}>Mark as Complete</Button>\r\n                </>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\nexport default MachineGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}