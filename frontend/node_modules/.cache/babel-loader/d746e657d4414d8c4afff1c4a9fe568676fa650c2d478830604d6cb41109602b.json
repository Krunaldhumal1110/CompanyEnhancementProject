{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\catalisProject\\\\frontend\\\\src\\\\CompletedMachines.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { List, ListItem, ListItemText, Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchCompletedMachines = async () => {\n  const {\n    data\n  } = await axios.get('/api/machines/completed');\n  return data;\n};\nfunction CompletedMachines() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    data: machines = []\n  } = useQuery(['completedMachines'], fetchCompletedMachines);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        mt: 2\n      },\n      children: \"Completed Machines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: machines.map(m => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: m.name,\n          secondary: `Model: ${m.model || ''} | Product No.: ${m.productNo || ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => navigate(`/machine/${m.id}`),\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(CompletedMachines, \"YbuTc6vaFprAoPh6noYAw53wtDI=\", false, function () {\n  return [useNavigate, useQuery];\n});\n_c = CompletedMachines;\nexport default CompletedMachines;\nvar _c;\n$RefreshReg$(_c, \"CompletedMachines\");","map":{"version":3,"names":["React","List","ListItem","ListItemText","Button","Typography","useNavigate","useQuery","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchCompletedMachines","data","get","CompletedMachines","_s","navigate","machines","children","variant","sx","mt","fileName","_jsxFileName","lineNumber","columnNumber","map","m","primary","name","secondary","model","productNo","onClick","id","_c","$RefreshReg$"],"sources":["D:/Krunal/catalisProject/frontend/src/CompletedMachines.jsx"],"sourcesContent":["import React from 'react';\r\nimport { List, ListItem, ListItemText, Button, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport axios from 'axios';\r\n\r\nconst fetchCompletedMachines = async () => {\r\n\tconst { data } = await axios.get('/api/machines/completed');\r\n\treturn data;\r\n};\r\n\r\nfunction CompletedMachines() {\r\n\tconst navigate = useNavigate();\r\n\tconst { data: machines = [] } = useQuery(['completedMachines'], fetchCompletedMachines);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Typography variant=\"h5\" sx={{ mt: 2 }}>Completed Machines</Typography>\r\n\t\t\t<List>\r\n\t\t\t\t{machines.map(m => (\r\n\t\t\t\t\t<ListItem key={m.id}>\r\n\t\t\t\t\t\t<ListItemText primary={m.name} secondary={`Model: ${m.model || ''} | Product No.: ${m.productNo || ''}`} />\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={() => navigate(`/machine/${m.id}`)}>View Details</Button>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default CompletedMachines;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAChF,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,yBAAyB,CAAC;EAC3D,OAAOD,IAAI;AACZ,CAAC;AAED,SAASE,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ,IAAI,EAAEK,QAAQ,GAAG;EAAG,CAAC,GAAGZ,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAEM,sBAAsB,CAAC;EACvF,oBACCH,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACCV,OAAA,CAACL,UAAU;MAACgB,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACvEjB,OAAA,CAACT,IAAI;MAAAmB,QAAA,EACHD,QAAQ,CAACS,GAAG,CAACC,CAAC,iBACdnB,OAAA,CAACR,QAAQ;QAAAkB,QAAA,gBACRV,OAAA,CAACP,YAAY;UAAC2B,OAAO,EAAED,CAAC,CAACE,IAAK;UAACC,SAAS,EAAE,UAAUH,CAAC,CAACI,KAAK,IAAI,EAAE,mBAAmBJ,CAAC,CAACK,SAAS,IAAI,EAAE;QAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3GjB,OAAA,CAACN,MAAM;UAACiB,OAAO,EAAC,UAAU;UAACc,OAAO,EAAEA,CAAA,KAAMjB,QAAQ,CAAC,YAAYW,CAAC,CAACO,EAAE,EAAE,CAAE;UAAAhB,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF/EE,CAAC,CAACO,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGT,CACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACN,CAAC;AAEL;AAACV,EAAA,CAhBQD,iBAAiB;EAAA,QACRV,WAAW,EACIC,QAAQ;AAAA;AAAA8B,EAAA,GAFhCrB,iBAAiB;AAiB1B,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}