{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\catalisProject\\\\frontend\\\\src\\\\MachineGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Card, CardContent, Typography, Button, Box, TextField, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ORANGE = '#ff9800';\nconst WHITE = '#fff';\nfunction MachineGrid() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [newMachineNo, setNewMachineNo] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get('/api/machines').then(res => setMachines(res.data));\n  }, []);\n\n  // 12 blocks, fill with machines or empty\n  const blocks = Array.from({\n    length: 12\n  }, (_, i) => {\n    const machine = machines[i];\n    return machine ? {\n      ...machine,\n      block: i + 1\n    } : {\n      block: i + 1\n    };\n  });\n  const handleAddClick = blockIdx => {\n    setSelectedBlock(blockIdx);\n    setNewMachineNo('');\n    setOpen(true);\n  };\n  const handleAddMachine = async () => {\n    await axios.post('/api/machines', {\n      name: `M/C-${selectedBlock + 1}`,\n      status: 'INCOMPLETE',\n      completed: false,\n      masterCardInfo: '',\n      electricDrawingPath: '',\n      machineNo: newMachineNo\n    });\n    setOpen(false);\n    setSelectedBlock(null);\n    axios.get('/api/machines').then(res => setMachines(res.data));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      background: WHITE,\n      minHeight: '80vh',\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        mt: 2\n      },\n      children: blocks.map((m, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 4,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            background: m.completed ? ORANGE : m.status === 'INCOMPLETE' ? '#fff3e0' : WHITE,\n            border: `2px solid ${ORANGE}`,\n            minHeight: 120,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: ORANGE,\n                fontWeight: 700\n              },\n              children: [\"Block \", m.block]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), m.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  color: '#333'\n                },\n                children: m.machineNo ? `Machine ${m.machineNo}` : 'No Machine No.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  background: ORANGE,\n                  mt: 1\n                },\n                onClick: () => navigate(`/machine/${m.id}`),\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              sx: {\n                color: ORANGE,\n                borderColor: ORANGE,\n                mt: 1\n              },\n              onClick: () => handleAddClick(idx),\n              children: \"Add Machine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Machine Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Machine Number\",\n          value: newMachineNo,\n          onChange: e => setNewMachineNo(e.target.value),\n          fullWidth: true,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddMachine,\n          variant: \"contained\",\n          sx: {\n            background: ORANGE\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(MachineGrid, \"nFf7ZEkvTZQCtyzZ/yJA5TVEwas=\", false, function () {\n  return [useNavigate];\n});\n_c = MachineGrid;\nexport default MachineGrid;\nvar _c;\n$RefreshReg$(_c, \"MachineGrid\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Card","CardContent","Typography","Button","Box","TextField","Dialog","DialogTitle","DialogContent","DialogActions","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ORANGE","WHITE","MachineGrid","_s","machines","setMachines","open","setOpen","selectedBlock","setSelectedBlock","newMachineNo","setNewMachineNo","navigate","get","then","res","data","blocks","Array","from","length","_","i","machine","block","handleAddClick","blockIdx","handleAddMachine","post","name","status","completed","masterCardInfo","electricDrawingPath","machineNo","sx","background","minHeight","p","children","container","spacing","mt","map","m","idx","item","xs","sm","md","border","display","flexDirection","alignItems","justifyContent","position","textAlign","variant","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","borderColor","onClose","label","value","onChange","e","target","fullWidth","autoFocus","_c","$RefreshReg$"],"sources":["D:/Krunal/catalisProject/frontend/src/MachineGrid.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Button, Box, TextField, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ORANGE = '#ff9800';\r\nconst WHITE = '#fff';\r\n\r\nfunction MachineGrid() {\r\n  const [machines, setMachines] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const [newMachineNo, setNewMachineNo] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/machines').then(res => setMachines(res.data));\r\n  }, []);\r\n\r\n  // 12 blocks, fill with machines or empty\r\n  const blocks = Array.from({ length: 12 }, (_, i) => {\r\n    const machine = machines[i];\r\n    return machine ? { ...machine, block: i + 1 } : { block: i + 1 };\r\n  });\r\n\r\n  const handleAddClick = (blockIdx) => {\r\n    setSelectedBlock(blockIdx);\r\n    setNewMachineNo('');\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleAddMachine = async () => {\r\n    await axios.post('/api/machines', { name: `M/C-${selectedBlock + 1}`, status: 'INCOMPLETE', completed: false, masterCardInfo: '', electricDrawingPath: '', machineNo: newMachineNo });\r\n    setOpen(false);\r\n    setSelectedBlock(null);\r\n    axios.get('/api/machines').then(res => setMachines(res.data));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ background: WHITE, minHeight: '80vh', p: 2 }}>\r\n      <Grid container spacing={2} sx={{ mt: 2 }}>\r\n        {blocks.map((m, idx) => (\r\n          <Grid item xs={6} sm={4} md={3} key={idx}>\r\n            <Card sx={{\r\n              background: m.completed ? ORANGE : (m.status === 'INCOMPLETE' ? '#fff3e0' : WHITE),\r\n              border: `2px solid ${ORANGE}`,\r\n              minHeight: 120,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              position: 'relative',\r\n            }}>\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <Typography variant=\"h6\" sx={{ color: ORANGE, fontWeight: 700 }}>Block {m.block}</Typography>\r\n                {m.id ? (\r\n                  <>\r\n                    <Typography variant=\"subtitle1\" sx={{ color: '#333' }}>{m.machineNo ? `Machine ${m.machineNo}` : 'No Machine No.'}</Typography>\r\n                    <Button variant=\"contained\" sx={{ background: ORANGE, mt: 1 }} onClick={() => navigate(`/machine/${m.id}`)}>View Details</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button variant=\"outlined\" sx={{ color: ORANGE, borderColor: ORANGE, mt: 1 }} onClick={() => handleAddClick(idx)}>Add Machine</Button>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Dialog open={open} onClose={() => setOpen(false)}>\r\n        <DialogTitle>Add Machine Number</DialogTitle>\r\n        <DialogContent>\r\n          <TextField label=\"Machine Number\" value={newMachineNo} onChange={e => setNewMachineNo(e.target.value)} fullWidth autoFocus />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n          <Button onClick={handleAddMachine} variant=\"contained\" sx={{ background: ORANGE }}>Add</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MachineGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}